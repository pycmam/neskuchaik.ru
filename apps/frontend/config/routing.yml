
# Места
# ====================================================
place_show:
  url: /place/:id
  class: sfDoctrineRoute
  options: { model: Place, type: object }
  params: { module: place, action: show }
  requirements:
    sf_method: get
    id: \d+

place_new:
  url: /place/new
  class: sfRequestRoute
  params: { module: place, action: new }
  requirements:
    sf_method: get

place_create:
  url: /place/new
  class: sfRequestRoute
  params: { module: place, action: create }
  requirements:
    sf_method: [put, post]

place_js:
  url: /places.:sf_format
  class: sfRequestRoute
  params: { module: place, action: places, sf_format: js }
  requirements:
    sf_method: get

place_comments:
  url: /place/:id/view
  class: sfDoctrineRoute
  options: { model: Place, type: object }
  params: { module: place, action: show, full: true }
  requirements:
    sf_method: get
    id: \d+

# События
# ====================================================
event:
  url: /events
  class: sfRequestRoute
  params: { module: event, action: index }
  requirements:
    sf_method: get

event_show:
  url: /event/:id
  class: sfDoctrineRoute
  options: { model: Event, type: object }
  params: { module: event, action: show }
  requirements:
    sf_method: get
    id: \d+

event_new:
  url: /event/new
  class: sfRequestRoute
  params: { module: event, action: new }
  requirements:
    sf_method: get

event_create:
  url: /event/new
  class: sfRequestRoute
  params: { module: event, action: create }
  requirements:
    sf_method: [put, post]

event_comments:
  url: /event/:id/view
  class: sfDoctrineRoute
  options: { model: Event, type: object }
  params: { module: event, action: show, full: true }
  requirements:
    sf_method: get
    id: \d+

event_accept:
  url: /event/:id/accept
  class: sfDoctrineRoute
  options: { model: Event, type: object }
  params: { module: event, action: accept }
  requirements:
    sf_method: [post]
    id: \d+

event_reject:
  url: /event/:id/reject
  class: sfDoctrineRoute
  options: { model: Event, type: object }
  params: { module: event, action: reject }
  requirements:
    sf_method: [post]
    id: \d+

# Юзеры
# ====================================================
users:
  url: /users

user_show:
  url: /user/:username
  class: sfDoctrineRoute
  options: { model: sfGuardUser, type: object }
  params: { module: user, action: show }
  requirements:
    sf_method: get
    id: \d+

# Регистрация
# ====================================================
loginza_signup:
  url: /signup
  class: sfRequestRoute
  params: { module: loginza, action: signup }
  requirements:
    sf_method: get

loginza_create:
  url: /signup
  class: sfRequestRoute
  params: { module: loginza, action: create }
  requirements:
    sf_method: post

# Авторизация
# ====================================================
loginza_auth:
  url: /auth
  class: sfRequestRoute
  params: { module: loginza, action: auth }
  requirements:
    sf_method: post

# Профиль
# ====================================================
profile:
  url: /my
  class: sfRequestRoute
  params: { module: loginza, action: profile }
  requirements:
    sf_method: get

# Выход
# ====================================================
signout:
  url: /signout
  class: sfRequestRoute
  params: { module: sfGuardAuth, action: signout }
  requirements:
    sf_method: get

# Страницы
# ====================================================
page:
  url: /:url
  class: sfDoctrineRoute
  options: { model: myContent, type: object, method_for_query: getByDomain }
  params: { module: myContent, action: show }
  requirements:
    sf_method: get

# Контакты
# ====================================================
page_contacts:
  url: /contacts

# О проекте
# ====================================================
page_about:
  url: /about

# Главная
# ====================================================
homepage:
  url:   /
  params:  { module: event, action: index }
  requirements:
    sf_method: get

